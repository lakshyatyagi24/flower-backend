generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  slug     String     @unique
  image    String?
  parentId Int?
  parent   Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children Category[] @relation("CategoryChildren")
  products Product[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  slug        String      @unique
  description String?
  price       Float
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  orderItems  OrderItem[]
  bookings    Booking[]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  phone     String?
  orders    Order[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User?       @relation(fields: [userId], references: [id])
  userId    Int?
  items     OrderItem[]
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  quantity  Int      @default(1)
  unitPrice Float
}

model Booking {
  id          Int           @id @default(autoincrement())
  user        User?         @relation(fields: [userId], references: [id])
  userId      Int?
  product     Product?      @relation(fields: [productId], references: [id])
  productId   Int?
  bookingDate DateTime
  quantity    Int           @default(1)
  status      BookingStatus @default(PENDING)
  notes       String?
  createdAt   DateTime      @default(now())
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

model Slider {
  id        Int     @id @default(autoincrement())
  title     String?
  eyebrow   String?
  subtitle  String?
  alt       String?
  image     String?
  href      String?
  // Arbitrary JSON configuration for overlay, colors, placement and button
  config    Json?
  sortOrder Int     @default(0)
  active    Boolean @default(true)
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
